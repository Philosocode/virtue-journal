// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirtueJournal.Data;

namespace VirtueJournal.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190809221152_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VirtueJournal.Data.Entities.Entry", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entry_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset?>("LastEdited")
                        .HasColumnName("last_edited");

                    b.Property<bool>("Starred")
                        .HasColumnName("starred");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("EntryId")
                        .HasName("pk_entries");

                    b.HasIndex("UserId")
                        .HasName("ix_entries_user_id");

                    b.ToTable("entries");
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("password_salt");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.Virtue", b =>
                {
                    b.Property<int>("VirtueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("virtue_id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnName("color")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(256);

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnName("icon")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(24);

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("VirtueId")
                        .HasName("pk_virtues");

                    b.HasIndex("UserId")
                        .HasName("ix_virtues_user_id");

                    b.ToTable("virtues");
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.VirtueEntry", b =>
                {
                    b.Property<int>("VirtueId")
                        .HasColumnName("virtue_id");

                    b.Property<int>("EntryId")
                        .HasColumnName("entry_id");

                    b.Property<int>("Difficulty")
                        .HasColumnName("difficulty");

                    b.HasKey("VirtueId", "EntryId")
                        .HasName("pk_virtue_entries");

                    b.HasIndex("EntryId")
                        .HasName("ix_virtue_entries_entry_id");

                    b.ToTable("virtue_entries");
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.Entry", b =>
                {
                    b.HasOne("VirtueJournal.Data.Entities.User", "User")
                        .WithMany("Entries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_entries_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.Virtue", b =>
                {
                    b.HasOne("VirtueJournal.Data.Entities.User", "User")
                        .WithMany("Virtues")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_virtues_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VirtueJournal.Data.Entities.VirtueEntry", b =>
                {
                    b.HasOne("VirtueJournal.Data.Entities.Entry", "Entry")
                        .WithMany("VirtueLinks")
                        .HasForeignKey("EntryId")
                        .HasConstraintName("fk_virtue_entries_entries_entry_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtueJournal.Data.Entities.Virtue", "Virtue")
                        .WithMany("EntryLinks")
                        .HasForeignKey("VirtueId")
                        .HasConstraintName("fk_virtue_entries_virtues_virtue_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
